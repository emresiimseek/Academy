@model InstructorDto
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Eğitmen Ekle</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(s => s.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row picker">
                    <div class="col-md-5">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", required = "required", type = "text", placeholder = "Ad" })
                        @Html.ValidationMessageFor(s => s.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.LastName, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                <div class="row picker">
                    <div class="col-md-5">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", required = "required", type = "text", placeholder = "Soyad" })
                        @Html.ValidationMessageFor(s => s.LastName, "", htmlAttributes: new { @class = "text-danger" })
                    </div>
                </div>


            </div>


        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.UserName, new { @class = "control-label col-md-2" })


            <div class="col-md-10">
                <div class="row picker">
                    <div class="col-md-5">


                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", required = "required", type = "text", placeholder = "Kullanıcı Adı" })
                    </div>
                </div>
                @Html.ValidationMessageFor(s => s.UserName, "", htmlAttributes: new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(s => s.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row picker">
                    <div class="col-md-5">
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", id = "pass", required = "required", type = "password", placeholder = "Parola" })
                    </div>
                </div>
                @Html.ValidationMessageFor(s => s.Password, "", htmlAttributes: new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">
            @Html.Label("Parola Tekrar", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row picker">
                    <div class="col-md-5">
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", id = "passconfirm", required = "required", type = "password", placeholder = "Parola Tekrar" })
                    </div>
                </div>
                @Html.ValidationMessageFor(s => s.Password, "", htmlAttributes: new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.HireDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row picker">
                    <div class="col">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                        @Html.TextBoxFor(x => x.HireDate, new { @class = "datepicker" })
                    </div>
                </div>
                @Html.ValidationMessageFor(s => s.HireDate, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <div class="row picker">
                <div style="margin-left:20%;" class="col-md-2">

                    <button type="submit" class="btn btn-primary btn-block" onclick="return Validate()"> Hesap Oluştur  </button>
                </div>
            </div>
        </div>

    </div>


    if (@ViewBag.result == true && ViewBag.result != null)
    {
        <p class="col-xs-offset-2" style="color:green;">Kaydınız kaydedilmiştir.</p>
    }
    if (@ViewBag.result == false && ViewBag.result != null)
    {
        <p class="col-xs-offset-2" style="color:red;">Beklenmedik bir hata alındı.</p>
    }

}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

<script>

    $('.datepicker').datepicker({
        weekStart: 1,
        daysOfWeekHighlighted: "6,0",
        autoclose: true,
        todayHighlight: true,
    });

    $('.datepicker').datepicker("setDate", new Date());

    function Validate() {
        var password = document.getElementById("pass").value;
        var confirmPassword = document.getElementById("passconfirm").value;

        if (password != confirmPassword) {
            alert("Parolalar uyuşmamaktadır!");
            return false;
        }
        return true;
    }


</script>
