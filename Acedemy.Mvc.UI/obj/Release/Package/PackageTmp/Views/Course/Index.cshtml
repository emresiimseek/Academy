@model List<Acedemy.API.Models.Dto.CourseDto>
@using Acedemy.API.Models.Dto
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Kurslar<i class="fa fa-book fa-style fa-icon" aria-hidden="true"></i></h2>

<div>


    <a class="btn btn-success addcourse" href="/Course/Create">Yeni Kurs<i class="fa fa-plus-circle" aria-hidden="true"></i></a>
    @*@Html.ActionLink("Yeni Kurs", "Create", new { }, new { @class = "btn btn-success addcourse" })k*@
</div>


<table class="table table-bordered">

    <thead>
        <tr class="header">
            <th>Kurs No</th>
            <th>Kurs Adı</th>
            <th>Kurs Açıklama</th>
            <th>Kurs Toplam Süre</th>
            <th>Eğitmenler</th>
            <th>Oluşturma Tarihi</th>
            <th>Değiştirme Tarihi</th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody>
        @foreach (CourseDto course in Model)
        {
            <tr class="customtr clickable-row">
                <td> @Html.DisplayFor(modelItem => course.CourseId)  <input type="text" class="hiddencourse" name="name" value="@course.CourseId" /></td>

                <td>  @Html.DisplayFor(modelItem => course.Title)</td>
                <td> @Html.DisplayFor(modelItem => course.Description)</td>
                <td> @Html.DisplayFor(modelItem => course.TotalTime)</td>

                @if (course.Instructors.Count == 0)
                {
                    <td style="background-color:red;">Eğitmen atanmamış.</td>
                }
                else
                {
                    <td>
                        @{
                            foreach (Academy.EntityFramework.Concrete.Instructor ınstructor in course.Instructors)
                            {
                                <p><i class="fa fa-user" aria-hidden="true"></i> @ınstructor.FirstName @ınstructor.LastName </p>
                            }
                        }
                    </td>

                }

                <td> @Html.DisplayFor(modelItem => course.CreatedOn)</td>
                <td>  @Html.DisplayFor(modelItem => course.ModifiedOn)</td>
                <td style="text-align:center;">
                    <a class="btn btn-warning" style="margin:2px;" href="/Course/Edit?id=@course.CourseId"><i class="fa fa-pencil" aria-hidden="true"></i></a>

                    <a class="btn btn-danger" onclick="DeleteCourse('@course.CourseId')"><i class="fa fa-trash" aria-hidden="true"></i></a><br>

                    <a class="btn btn-success" style="margin:2px;" onclick="AddInstructorToCouse('@course.CourseId')"><i class="fa fa-users" aria-hidden="true"></i></a>

                    <a class="btn btn-primary" style="padding:9px;" onclick="AddStudentToCouse('@course.CourseId')"><i class="fa fa-graduation-cap" aria-hidden="true"></i></a>

                </td>

            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="areaModal">   </div>



<script>


    function DeleteCourse(CourseId) {
        var answer = window.confirm("Kaydı silmek istedinize emin misiniz?")

        if (answer == true) {
            $.ajax({
                method: "POST",
                url: "/Course/Delete",
                data: { id: CourseId },
                success: function () {
                    alert("Başarılı!");
                    location.reload();
                }
            })
        }

    }



    var SelectedCourse = null;
    function AddStudentToCouse(courseId) {
        isAddedPeople = [];
        SelectedCourse = courseId;
        $.ajax({
            url: '/Course/GetAllStudent',
            type: "POST",
            datatype: 'json',
            async: true,
            data: { Id: courseId },
            success: function (e) {
                $('.areaModal').html(e)
            }

        }).done(function () {
            $('.addstudent').modal('show');
        });

    }
    function AddInstructorToCouse(courseId) {
        isAddedPeople = [];
        SelectedCourse = courseId;
        $.ajax({
            url: '/Course/GetAllInstructor',
            type: "POST",
            datatype: 'json',
            async: true,
            data: { Id: courseId },
            success: function (e) {
                $('.areaModal').html(e)
            }

        }).done(function () {
            $('.addstudent').modal('show');
        });

    }




    $(document).on('click', '.searchbuttontostudent', function () {

        var value = $('#search').val();
        $.ajax({
            method: "POST",
            url: "/Student/FindByNameForAssign",
            data: { key: value }
        }).done(function (r) {
            $("#body_table").html(r);
        })



    });
    $(document).on('click', '.searchbuttontoinstructor', function () {

        var value = $('#search').val();
        $.ajax({
            method: "POST",
            url: "/Instructor/FindByName",
            data: { key: value }
        }).done(function (r) {
            $("#body_table").html(r);
        })



    });


    var isAddedPeople = [];
    function AddedorNotPeople(Id) {

        if ($("." + Id).prop("checked") == true) {

            $("." + Id).css("background-color", "");
            $("." + Id).prop('checked', false);

            var index = isAddedPeople.indexOf(Id);
            isAddedPeople.splice(index, 1);

        }
        else {
            $("." + Id).css("background-color", "green");
            $("." + Id).prop('checked', true);


            isAddedPeople.push(Id);
            //alert(isAddedPeople);





        }
    }


    $(document).on('click', '.savestudenttocourse', function () {

        //alert(isHere);
        if (isAddedPeople.length == 0) {
            alert("Lütfen listeden öğrenci seçiniz.")
        }
        else {
            var answer = window.confirm("Devam etmeniz durumunda öğreciler kursa atanacaktır!")
            var MessagesObj = new Array();
            if (answer == true) {

                var model = new Object();
                model.CourseId = SelectedCourse;
                model.People = isAddedPeople;

                $.ajax({
                    url: '/Course/SaveStudentAssign',
                    type: 'POST',
                    datatype: 'json',
                    async: true,
                    data: { assignModel: model },
                    success: function (e) {

                        var messages = e['messages'];
                        $.each(messages, function (x, Messages) {
                            alert(Messages);
                        })
                       
                        isAddedPeople = [];

                    }
                });
            }
        }





    });


    $(document).on('click', '.saveinstructortocourse', function () {

        //alert(isHere);
        if (isAddedPeople.length == 0) {
            alert("Lütfen listeden öğrenci seçiniz.")
        }
        else {
            var answer = window.confirm("Devam etmeniz durumunda eğitmenler kursa atanacaktır!")
            var MessagesObj = new Array();
            if (answer == true) {

                var model = new Object();
                model.CourseId = SelectedCourse;
                model.People = isAddedPeople;

                $.ajax({
                    url: '/Course/SaveInstructorAssign',
                    type: 'POST',
                    datatype: 'json',
                    async: true,
                    data: { assignModel: model },
                    success: function (e) {

                        var messages = e['messages'];
                        $.each(messages, function (x, Messages) {
                            alert(Messages);
                        })
                        isAddedPeople = [];

                    }
                });
            }
        }





    });




</script>